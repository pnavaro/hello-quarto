---
pagetitle: "Hello Quarto"
format: 
  revealjs: 
    theme: style.scss
    multiplex: true
    transition: fade
    height: 900
    width: 1600
    fontcolor: "#262d36"
    highlight-style: a11y
    code-line-numbers: false
editor: visual
---

##  {#hello-quarto-title data-menu-title="Hello Quarto" background-image="images/horst_penguins_telescope.png" aria-label="One penguin standing on another penguin's shoulders in a snowscape, looking through a telescope at a Quarto logo moon in the night sky."}

[Hello Quarto]{.custom-title}

[share • collaborate • teach • reimagine]{.custom-subtitle}

[pierre navaro]{.custom-author}

[[pnavaro.quarto.pub/hello-quarto](https://pnavaro.quarto.pub/hello-quarto/)]{.custom-url}

[artwork by allison horst]{.custom-artwork}


##  {#unifies-extends-1 .centered data-menu-title="Unifies and extends 1" background-color="#0F1620" auto-animate="true"}

::: {style="margin-top: 150px; font-size: 3em; color: #75AADB;"}
Quarto **unifies** and **extends**<br>the R Markdown ecosystem
:::

##  {#unifies-extends-2 .centered data-menu-title="Unifies and extends 2" background-color="#0F1620" auto-animate="true"}

::: {style="margin-top: 100px; font-size: 2.2em; color: #75AADB"}
Quarto **unifies** and **extends** <br>the R Markdown ecosystem
:::

<br>

::: large
**unifies** for people who love R Markdown
:::

<br>

::: {.fragment .fade-up .large fragment-index="2"}
**extends** for people who don't know R Markdown
:::

::: notes
It unifies it for people who love R Markdown by reducing little points of friction, so that websites, books, and slides all have a common approach.

And it extends it for people who don't know RMarkdown by being a friendly way to work reproducibly and publish documents that have text and code in the same place
:::

##  {#publishing-system-1 .centered data-menu-title="Publishing system 1" background-color="#0F1620" auto-animate="true"}

::: {style="margin-top: 100px; font-size: 3em; color: #75AADB;"}
Quarto is a new, open-source,<br> scientific and technical<br> publishing system
:::

::: notes
Quarto is a new open-source scientific and technical publishing system.
:::

##  {#publishing-system-2 .centered data-menu-title="Publishing system 2" background-color="#0F1620" auto-animate="true"}

::: {style="margin-top: 50px; font-size: 2em; color: #75AADB"}
Quarto is a new, open-source,<br> scientific and technical<br> publishing system
:::

::: midi
**the goal is to make the process of creating**<br> and collaborating dramatically better
:::

::: {.fragment .fade-up}
![](images/horst_quarto_schematic.png){fig-align="center" width="1100px" fig-alt="A schematic representing the multi-language input (e.g. Python, R, Observable, Julia) and multi-format output (e.g. PDF, html, Word documents, and more) versatility of Quarto."}
:::

## The R Markdown ecosystem

![](images/1-share/rmd_ecosystem.png){fig-align="center" fig-alt="Hex logos for various packages from the R Markdown ecosystem."}

::: notes
Julie mentioned unifying the R Markdown ecosystem so let's dig a bit more into what that means...

Think of all the packages from the R Markdown universe that you've come to love and rely on over the years.
Each package addresses a different need and offers a different output: for example, you can use blogdown or distill for creating websites and blogs, bookdown for writing a book, rticles for writing journal articles, etc.
:::

## Quarto: Next generation R Markdown {transition="zoom"}

![](images/horst_quarto_ball_straight.png){fig-align="center" width="50%" fig-alt="Quarto logo."}

::: notes
Quarto unifies the functionality from these packages,

building on Pandoc on the technical side

and on the human side -- over a decade of experience developing, maintaining, and tweaking these packages as well as community feedback R Markdown extension packages.

Such a unification effort presents a fantastic  opportunity to identify and address gaps functionality and inefficiencies in user experience, and the process of building Quarto has been no different.
:::

## Quarto highlights

::: columns
::: {.column width="5%"}
:::

::: {.column width="40%"}
::: bulletbox
::: {.fragment .fade-in-then-semi-out}
![](images/horst_quarto_ball-1_4.png){width="50px" fig-alt="One quadrant of the Quarto logo."} Consistent implementation of attractive and handy features across outputs: tabsets, code-folding, syntax highlighting, etc.
:::
:::
:::

::: {.column width="5%"}
:::

::: {.column width="40%"}
::: bulletbox
::: {.fragment .fade-in-then-semi-out}
![](images/horst_quarto_ball-2_4.png){width="50px" fig-alt="Two quadrants of the Quarto logo."} More accessible defaults as well as better support for accessibility
:::
:::
:::

::: {.column width="5%"}
:::
:::

::: columns
::: {.column width="5%"}
:::

::: {.column width="40%"}
::: bulletbox
::: {.fragment .fade-in-then-semi-out}
![](images/horst_quarto_ball-3_4.png){width="50px" fig-alt="Three quadrants of the Quarto logo."} Guardrails, particularly helpful for new learners: YAML completion, informative syntax errors, etc.
:::
:::
:::

::: {.column width="5%"}
:::

::: {.column width="40%"}
::: bulletbox
::: {.fragment .fade-in-then-semi-out}
![](images/horst_quarto_ball-4_4.png){width="50px" fig-alt="Four quadrants of the Quarto logo."} Support for other languages like Python, Julia, Observable, and more via Jupyter engine for executable code chunks.
:::
:::
:::

::: {.column width="5%"}
:::
:::

::: notes
Some highlights of these improvements include

--\> consistent implementation of attractive and handy features across *all* outputs, like tabsets, code-folding, and syntax highlighting,

--\> more accessible defaults as well as better support for creating accessible documents,

--\> guardrails that are particularly helpful for new learners, like YAML completion and informative syntax errors,

--\> and perhaps most excitingly for those who are not coming from the R ecosystem, Quarto offers support for other languages like Python, Julia, Observable, and more via the Jupyter engine for executable code chunks.
And it's designed to be expandable to more engines and languages, even those that might not exist today.

[pause] So by now I'm assuming many of you have already started playing with Quarto, or you're waiting for me to do that.
So, let's dive in and see what all the Quarto fuss is about!
:::

##  {#demo-share .centered data-menu-title="Demo: Share" background-video="videos/demo-1-share.mp4" background-size="contain" background-color="#FFFFFF"}

::: notes
-   Open hello.Rmd with source editor -\> knit
-   Change to visual editor -\> knit
-   Close file -\> change file type to .qmd -\> open + render
-   Change `output: html_document` to `format: html` -\> render
-   Click on Render on save
-   Change to `format: pdf` -\> render -\> then change back
-   Add chunk option `echo: false` to the first chunk
-   Add `execute` > `echo: false` to the yaml
-   Add alt text to figure in second code chunk -\> save to render
-   Change to `format: revealjs` -\> save to render
-   Add H2 to break slides
-   Change to `format: html`
-   Add `index.qmd` with File \> New Quarto Document
-   Add `_quarto.yml` for website
-   Relaunch project
-   Show new Build tab
-   Render site, show `_site` folder
-   Add freeze to _quarto.yml
-   From terminal: `quarto publish`
:::

## Quarto CLI orchestrates<br>each step of rendering {.takeaway .center}

::: {.fragment .fade-up}
![](images/horst_qmd_render_schema.png){fig-alt="A schematic representing rendering of Quarto documents from .qmd, to knitr or jupyter, to plain text markdown, then converted by pandoc into any number of output types including html, PDF, or Word document." fig-align="center"}
:::

::: notes
Now that you've all had a chance to see Quarto in action, you might be wondering, "how are R Markdown and Quarto different"?

The main difference is that with R Markdown, the R package rmarkdown does the heavy lifting of going from the source Rmd file to the the output, using knitr for evaluating the code chunks.

--\> With Quarto, on the other hand, the Quarto command line interface, or the Quarto CLI, does the orchestration of processing executable code chunks with either knitr or jupyter and then converting the resulting markdown file to the desired output.

While this is technically impressive, I'll be honest, it's not exactly what sparked my interest in Quarto in the first place.
:::

## Quarto makes moving between formats straightforward {.takeaway .center}

::: columns
::: {.column width="33%"}
::: fragment
Document

::: {.code-file .sourceCode .cell-code}
{{< fa file >}} lesson-1.qmd
:::

``` yaml
title: "Lesson 1"
format: html
```

:::
:::

::: {.column width="33%"}
::: fragment
Presentation

::: {.code-file .sourceCode .cell-code}
{{< fa file >}} lesson-1.qmd
:::

``` yaml
title: "Lesson 1"
format: revealjs
```

:::
:::

::: {.column width="33%"}
::: fragment
Website

::: {.code-file .sourceCode .cell-code}
{{< fa file >}} _quarto.yml
:::

``` yaml
project:
  type: website

website: 
  navbar: 
    left:
      - lesson-1.qmd
```
:::
:::
:::

## Quarto facilitates open sharing {.takeaway .center}

<br>

::: {.fragment .fade-up .midi}
Tooling that makes it easy to share what you do<br> with the world on the web is incredibly useful
:::

<br>

::: {.fragment .fade-up .midi}
It's useful not just to you, but to the world<br> as it facilitates open sharing of knowledge<br> for learning and for reuse
:::

# Teach {.title-middle-ice background-image="images/horst_quarto_penguins_teach.png" aria-label="Two penguins in a room made of ice, looking out a window. One penguin is holding an icicle as a pointer, pointing at a Quarto logo moon in the sky, while the other penguin looks on."}

::: notes
**Julie:** Transition: And this has teaching implications that Mine will talk about next.

**Mine:**Over the last decade I have thoroughly loved teaching R Markdown.
It's amazing when students hit that Knit button, see their code and their prose come together -- you can often hear a "wow, that's so cool" in the classroom the first time that happens.
I've also loved that this is a tool that they can pick up easily on the first day of an intro course, and it grows with them as their statistical and computational expertise grows.
However, as students' expertise in these areas grow, the computation gets more resource intensive (and even sometimes involving multiple languages) and they end up needing different output formats to support their needs, like PDFs in specific journal styles or a thesis with multiple chapters.
A pleasant surprise in teaching with Quarto has been how much less steep the learning curve is for making this transition from single, simple document to a multi-document projects.
Let me tell you the story of one of my thesis students.
:::

## Course materials with Quarto {.takeaway .center}

<br>

::: {.fragment .fade-up}
![](images/3-teach/many-lang-qmd-to-output.png){fig-alt="A schematic showing many computing languages (R, Python, Julia, Observable, and more) going into many single qmd files, going through Quarto, to generate an HTML, PDF, or Word document or more. The Quarto logo is depicted as a baseball a penguin is spinning." fig-align="center"}
:::

::: notes
And beyond learners growing and expanding the scope of their work easily with Quarto, Quarto can grow with them in a profound way as well.

--> The fact that Quarto is language and authoring tool independent offers an opportunity for folks to take Quarto with them on their data science journey, wherever that journey takes them.
I mean..
I'm almost tempted to finally learn Python to see it in action in Quarto.
But who I know is learning Python, and Julia, and other languages are my students in their Computer Science courses.
To imagine that they could learn R in RStudio using Quarto in my course, and then continue to use Quarto in Jupyter in their CS courses... That sounds like such a bright future to me!

**\[Pause\]** And a bright future includes things we can't even imagine yet.

**\[Mine continue on next slide\]**
:::

# [pnavaro.quarto.pub/hello-quarto](https://pnavaro.quarto.pub/hello-quarto) {#coda .custom-url-top-white data-menu-title="Coda" background-image="images/horst-quarto-meteor.png" aria-label="A meteor where the head of the meteor is the Quarto logo, with dark background."}

::: notes
If you would like to start sharing, collaborating, teaching, and reimagining with Quarto by picking up where we left off, go to this link and scroll forward to see the next few slides where we share resources for learning as well as references for the works we presented today.
And if you have any questions about Quarto or R Markdown, please stop by the Open Source table in the Lounge between 12-3pm today.
And don't miss the Quarto session at 3:20pm!
:::

## References

-   Slides: [github.com/mine-cetinkaya-rundel/hello-quarto-demo](https://github.com/mine-cetinkaya-rundel/hello-quarto-demo)

-   Video: [Quarto - le nouvel outil pour créer vos dataviz](https://youtu.be/Cwg7tdSdRvY)

-   Video: [Reproducible authoring with Quarto](https://youtu.be/6p4vOKS6Xls)

-   Video: [Openscapes: Hello Quarto with NASA Openscapes, RLadies Santa Barbara, and JJ Allaire](https://youtu.be/azVAl343CIU)

-   Quarto documentation: [quarto.org](https://quarto.org/)

-   Quarto gallery: [quarto.org/docs/gallery](https://quarto.org/docs/gallery/)

-   Quarto tip a day: [rstd.io/quartotip](https://rstd.io/quartotip)

-   [Learning by doing: migrating to Quarto from Bookdown](https://www.openscapes.org/blog/2022/07/21/quarto-migrate/)

![](images/horst-quarto-penguins.png){fig-alt="Two penguins. The orange one is holding the Quarto logo. The blue one is looking at the orange one." fig-align="right" width="600"}
